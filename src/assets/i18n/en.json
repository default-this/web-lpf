{
  "appTitle": "ngPoweredUP",
  "controllersList": "Controllers",
  "hubsList": "Hubs",
  "hubListHubIsNotConnected": "disconnected",
  "controlSchemesList": "Control schemes",
  "aboutPageButton": "About",
  "discoverHub": "Discover hub",
  "editHub": "Edit",
  "hubName": "Hub name",
  "editHubFormSave": "Save",
  "editHubFormCancel": "Cancel",
  "hubErrorUnableToGetProperty": "Unable to get hub {property} property",
  "hubConnectionCancelled": "Hub connection cancelled",
  "hubConnectionFailedUnableToGetPrimaryMac": "Hub connection failed: unable to get primary MAC address",
  "viewHub": "View",
  "disconnectHub": "Disconnect",
  "forgetHub": "Forget hub",
  "noHubConnected": "No connected hubs",
  "hubIsNotConnected": "Hub is not connected",
  "bluetoothIsNotAvailable": "Bluetooth is not available",
  "hubConnected": "Hub {name} connected",
  "hubDisconnected": "Hub {name} disconnected",
  "hubBatteryLevel": "Battery: {batteryLevel}%",
  "hubBatteryLevelUnknown": "Battery level unknown",
  "hubRSSILevel": "RSSI: {RSSI}",
  "hubRSSILevelUnknown": "RSSI unknown",
  "hubButtonStateTitle": "Button state",
  "hubButtonState": "Hub button state: {isButtonPressed, select, true {pressed} other {released}}",
  "hubPort": "Port {portId}",
  "hubIOHardwareRevision": "HW Rev. {hardwareRevision}",
  "hubIOSoftwareRevision": "SW Rev. {softwareRevision}",
  "controlSchemeIsActive": "Control scheme is active",
  "noControlSchemes": "No control schemes",
  "createScheme": "Create scheme",
  "viewScheme": "View",
  "editScheme": "Edit",
  "cancelEditScheme": "Cancel",
  "deleteScheme": "Delete scheme",
  "addSchemeBinding": "Add binding",
  "deleteSchemeBinding": "Delete binding",
  "saveEditedScheme": "Save",
  "saveCreatedScheme": "Save",
  "cancelCreateScheme": "Cancel",
  "cancelAddSchemeBinding": "Cancel",
  "createBindingWaitingForInputTitle": "Waiting for input",
  "createBindingWaitingForInputContent": "Move the controller's stick or press a button to create a binding",
  "pageNotFound": "Page not found",
  "schemeIsNotFound": "Scheme is not found",
  "hubTypeBoost": "Boost Hub",
  "hubTypeWeDo": "WeDo Hub",
  "hubTypeDuploTrain": "Duplo Train",
  "hubTypeTwoPortHub": "Two-port Hub",
  "hubTypeTwoPortHandset": "Two-port Handset",
  "hubTypeUnknown": "Unknown hub type",
  "bindingHubIsNotAttachedOption": "Unknown hub",
  "bindingSelectHubToAttachTitle": "Select hub to attach",
  "hubIOOperationModeLinear": "Linear",
  "hubIOOperationModeServo": "Servo",
  "hubIOOperationModeSetAngle": "Set angle",
  "bindingInputSection": "Input",
  "bindingOutputSection": "Output",
  "bindingOutputSectionPortLabel": "Port",
  "bindingOutputSectionOperationModeLabel": "Operation mode",
  "bindingConfigurationSection": "Configuration",
  "runScheme": "Start",
  "stopScheme": "Stop",
  "currentSchemeIsRunning": "Current control scheme is running",
  "currentRunningSchemeTasksQueueDetails": "Details",
  "schemeTaskQueueCurrentLength": "Pending tasks:",
  "schemeTaskMaximumEncounteredQueueLength": "Maximum queue length:",
  "totalTasksExecuted": "Total tasks executed:",
  "lastTenTasksAverageExecutionTime": "Last 10 tasks average execution time (ms):",
  "schemeEditNameField": "Control scheme name",
  "schemeValidationAnotherSchemeIsRunning": "Another control scheme is running",
  "schemeValidationHubMissing": "Some hubs are missing",
  "schemeValidationIOMissing": "Some IOs are missing",
  "schemeValidationControllerIsMissing": "Some controllers are missing",
  "schemeValidationIOCapabilitiesMismatch": "Some IOs have incompatible capabilities",
  "schemeBindingValidationControllerIsMissing": "Attached controller is missing",
  "schemeBindingValidationHubMissing": "Attached hub is missing",
  "schemeBindingValidationHubIOIsMissing": "Attached device is missing",
  "schemeBindingValidationHubIOCapabilitiesMismatch": "Attached device does not have required capabilities",
  "portCommandTaskTypeSetLinearSpeed": "Speed: {speed}",
  "portCommandTaskTypeServo": "Angle: {angle}",
  "portCommandTaskTypeSetAngle": "Angle: {angle}",
  "schemeOutputBindingNoConfigurationRequired": "No configuration required",
  "schemeOutputBindingConfigurationLinearToggleParameter": "Treat button as switch",
  "schemeOutputBindingConfigurationLinearSpeedParameter": "Speed",
  "schemeOutputBindingConfigurationLinearMaximumSpeedParameter": "Maximum speed",
  "schemeOutputBindingConfigurationLinearInvertParameter": "Invert",
  "schemeOutputBindingConfigurationLinearPowerParameter": "Output power",
  "schemeOutputBindingConfigurationServoAngleRange": "Servo range (deg)",
  "schemeOutputBindingConfigurationServoCenterOffset": "Center offset (deg)",
  "schemeOutputBindingConfigurationServoInvertParameter": "Invert",
  "schemeOutputBindingConfigurationServoSpeedParameter": "Speed",
  "schemeOutputBindingConfigurationServoPowerParameter": "Power",
  "schemeExpandCollapseHub": "Expand/collapse hub {name}",
  "schemeExpandCollapseIO": "Expand/collapse port {portId}",
  "setAngleOutputConfiguration": {
    "angle": "Target angle",
    "power": "Power",
    "speed": "Speed",
    "endState": "End state"
  },
  "motorServoEndState": {
    "float": "Float",
    "hold": "Hold",
    "brake": "Brake"
  },
  "aboutPageTitle": "About",
  "aboutPageDisclaimerTitle": "Disclaimer",
  "aboutPageLegalNotice": "LEGOÂ® is a trademark of the LEGO Group of companies which does not sponsor, authorize or endorse this app.",
  "aboutPageLicenseTitle": "License",
  "aboutPageLicenseText": "MIT License",
  "aboutPageAuthorTitle": "Author",
  "aboutPageAuthorName": "Nikolai Sukhanov",
  "aboutPageSourcesTitle": "Sources",
  "aboutPageGithubTitle": "ngPoweredUP GitHub",
  "aboutPageGithubApiTitle": "rxPoweredUP GitHub",
  "aboutPageVersionTitle": "Version",
  "bluetoothUnavailableMessage": "It appears that your browser does not support the Web Bluetooth API",
  "bluetoothUnavailableLink": "For more information, please refer to",
  "servoCalibrationIsInProgress": "Servo calibration is in progress",
  "servoCalibrationError": "An error occurred during servo calibration",
  "servoCalibrationCancel": "Cancel",
  "servoCalibrateButtonTitle": "Calibrate",
  "io": {
    "ioInputCapabilities": "Input Capabilities",
    "ioOutputCapabilities": "Output Capabilities",
    "ioCapabilitiesEmpty": "None",
    "ioTypeMotor": "Motor",
    "ioTypeSystemTrainMotor": "System Train Motor",
    "ioTypeButton": "Button",
    "ioTypeLedLight": "LED Light",
    "ioTypeVoltage": "Voltage",
    "ioTypeCurrent": "Current",
    "ioTypePiezoTone": "Piezo Tone",
    "ioTypeRgbLight": "RGB Light",
    "ioTypeExternalTiltSensor": "External Tilt Sensor",
    "ioTypeMotionSensor": "Motion Sensor",
    "ioTypeVisionSensor": "Vision Sensor",
    "ioTypeExternalMotorWithTacho": "External Motor with Tacho",
    "ioTypeInternalMotorWithTacho": "Internal Motor with Tacho",
    "ioTypeInternalTilt": "Internal Tilt",
    "ioTypeLargeTechnicMotor": "Large Technic Motor",
    "ioTypeXLargeTechnicMotor": "XLarge Technic Motor",
    "ioTypeMediumTechnicAngularMotor": "Medium Technic Angular Motor",
    "ioTypeLargeTechnicAngularMotor": "Large Technic Angular Motor",
    "ioTypeHandsetButtonGroup": "Handset Button Group",
    "ioIsNotConnectedInlineNotification": "disconnected",
    "unknownIOType": "Unknown device type"
  },
  "controller": {
    "detectControllerTip": "To detect a controller, press any button on it or move any stick",
    "noControllerConnected": "No controller detected",
    "isNotConnectedInlineNotification": "disconnected",
    "keyboardControllerType": "Keyboard",
    "gamepadControllerType": "Gamepad"
  },
  "controllerPlugins": {
    "buttonState": "{ value, select, 1 {Pressed} other {Released} }",
    "axisState": "Position: { value }",
    "unknownControllerName": "Unknown controller",
    "unknownControllerAxis": "Axis {inputId}",
    "unknownControllerButton": "Button {inputId}",
    "disconnectedController": "Disconnected controller",
    "disconnectedControllerAxis": "Axis {inputId}",
    "disconnectedControllerButton": "Button {inputId}",
    "settings": "Settings",
    "dualshock": {
      "name": "Dualshock",
      "leftStickXAxis": "Left stick X-axis",
      "leftStickYAxis": "Left stick Y-axis",
      "rightStickXAxis": "Right stick X-axis",
      "rightStickYAxis": "Right stick Y-axis",
      "r2Trigger": "R2 trigger",
      "l2Trigger": "L2 trigger",
      "buttonCross": "Cross button",
      "buttonSquare": "Square button",
      "buttonTriangle": "Triangle button",
      "buttonCircle": "Circle button",
      "l1Trigger": "L1 trigger",
      "r1Trigger": "R1 trigger",
      "buttonShare": "Share",
      "buttonOptions": "Options",
      "leftStickPress": "L3 left stick press",
      "rightStickPress": "R3 right stick press",
      "buttonDpadUp": "DPad up",
      "buttonDpadDown": "DPad down",
      "buttonDpadLeft": "DPad left",
      "buttonDpadRight": "DPad right",
      "buttonPs": "PS",
      "buttonTouchpadPress": "Touchpad press"
    },
    "xbox360": {
      "name": "Xbox 360 Controller",
      "leftStickXAxis": "Left stick X-axis",
      "leftStickYAxis": "Left stick Y-axis",
      "rightStickXAxis": "Right stick X-axis",
      "rightStickYAxis": "Right stick Y-axis",
      "lTrigger": "RT",
      "rTrigger": "LT",
      "buttonA": "A button",
      "buttonB": "B button",
      "buttonX": "X button",
      "buttonY": "Y button",
      "lBumper": "LB",
      "rBumper": "RR",
      "buttonShare": "Share",
      "buttonMenu": "Menu",
      "leftStickPress": "Left stick press",
      "rightStickPress": "Right stick press",
      "buttonDpadUp": "DPad up",
      "buttonDpadDown": "DPad down",
      "buttonDpadLeft": "DPad left",
      "buttonDpadRight": "DPad right"
    },
    "keyboard": {
      "name": "Keyboard",
      "button": "Button { inputId }",
      "captureNonAlphaNumerics": "Allow use of non-alphanumeric keys for input",
      "captureNonAlphaNumericsHint": "In some scenarios, capturing non-alphanumeric keys may prevent you from using your keyboard normally. Use this option with caution."
    }
  }
}
