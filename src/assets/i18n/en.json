{
  "appTitle": "ngPoweredUP",
  "pageNotFound": "Page not found",
  "hubListHubIsNotConnected": "disconnected",
  "discoverHub": "Discover hub",
  "bluetoothIsNotAvailable": "Bluetooth is not available",
  "confirmationDialog": {
    "defaultTitle": "Are you sure?",
    "defaultConfirmButtonTitle": "Confirm",
    "defaultCancelButtonTitle": "Cancel"
  },
  "bluetoothUnavailable": {
    "message": "It appears that your browser does not support the Web Bluetooth API",
    "link": "For more information, please refer to"
  },
  "nav": {
    "controllersList": "Controllers",
    "hubsList": "Hubs",
    "controlSchemesList": "Control schemes",
    "navMenuAriaLabel": "Menu",
    "aboutPageButton": "About",
    "settingsPageButton": "Settings"
  },
  "settings": {
    "theme": "Theme",
    "themeSystem": "System",
    "themeLight": "Light",
    "themeDark": "Dark"
  },
  "hub": {
    "hub": "Hub",
    "edit": "Edit",
    "name": "Hub name",
    "save": "Save",
    "cancel": "Cancel",
    "view": "View",
    "disconnect": "Disconnect",
    "forget": "Forget",
    "forgerHubNotificationConfirmationTitle": "Are you sure you want to forget this hub?",
    "forgerHubNotificationConfirmationContent": "Some control schemes may stop working. You can revert this action by connecting the hub again",
    "forgerHubNotificationConfirmationConfirmButtonTitle": "Forget",
    "forgerHubNotificationConfirmationCancelButtonTitle": "Cancel",
    "noneConnected": "There are no connected hubs yet",
    "notConnected": "disconnected",
    "isNotConnectedTitle": "Hub is not connected",
    "connected": "Hub {name} connected",
    "disconnected": "Hub {name} disconnected",
    "batteryLevel": "Battery: {batteryLevel}%",
    "batteryLevelUnknown": "Battery level unknown",
    "rssiLevel": "RSSI: {rssi}",
    "rssiLevelUnknown": "RSSI unknown",
    "buttonStateTitle": "Button state",
    "buttonState": "Hub button state: {isButtonPressed, select, true {pressed} other {released}}",
    "port": "Port {portId}"
  },
  "hubTypes": {
    "boost": "Boost Hub",
    "weDo": "WeDo Hub",
    "duploTrain": "Duplo Train",
    "twoPortHub": "Two-port Hub",
    "twoPortHandset": "Two-port Handset",
    "unknown": "Unknown hub type"
  },
  "controlScheme": {
    "newSchemeDialogTitle": "Create new control scheme",
    "newSchemeDialogSubmitButtonTitle": "Create",
    "newSchemeDialogCancelButtonTitle": "Cancel",
    "newSchemeDialogNameField": "Scheme name",
    "newSchemeDialogDefaultName": "New scheme",
    "notFound": "Scheme is not found",
    "noControlSchemes": "There are no control schemes yet",
    "bindingsListEmptyNotification": "There are no bindings in this scheme yet",
    "create": "Create",
    "cancelEdit": "Cancel",
    "addBinding": "Add binding",
    "deleteBinding": "Delete",
    "saveEdited": "Save",
    "saveCreated": "Save",
    "cancelCreate": "Cancel",
    "cancelAddBinding": "Cancel",
    "createBindingWaitingForInputTitle": "Waiting for input",
    "createBindingWaitingForInputContent": "Move the controller's stick or press a button to create a binding",
    "noMatchingIoForInputFound": "There are no IOs that can be controlled by this input",
    "view": "View",
    "edit": "Edit",
    "run": "Start",
    "stop": "Stop",
    "delete": "Delete",
    "deleteSchemeConfirmationTitle": "Are you sure you want to delete ''{name}'' scheme?",
    "deleteSchemeConfirmationContent": "This action cannot be undone",
    "deleteSchemeConfirmationConfirmButtonTitle": "Delete",
    "deleteSchemeConfirmationCancelButtonTitle": "Cancel",
    "deleteBindingConfirmationTitle": "Are you sure you want to delete this binding?",
    "deleteBindingConfirmationContent": "This action cannot be undone",
    "deleteBindingConfirmationConfirmButtonTitle": "Delete",
    "deleteBindingConfirmationCancelButtonTitle": "Cancel",
    "nameField": "Control scheme name",
    "bindingAssignControlButtonTitle": "Assign control",
    "bindingGenericInputTitle": "Input",
    "bindToAnotherInputButtonTitle": "Rebind",
    "bindingOutputSectionPortLabel": "Port",
    "bindingOutputSectionOperationModeLabel": "Operation mode",
    "expandCollapseHub": "Expand/collapse hub {name}",
    "expandCollapseIo": "Expand/collapse port {portId}",
    "ioCapabilitiesMismatch": "Attached device does not have required capabilities",
    "outputConfigurationNotRequired": "No configuration required",
    "runningDetailsIsRunningNotification": "Control scheme is running",
    "runningDetailsTasksQueueDetails": "Details",
    "runningDetailsQueueCurrentLength": "Pending tasks:",
    "runningDetailsMaximumEncounteredQueueLength": "Maximum queue length:",
    "runningDetailsTotalTasksExecuted": "Total tasks executed:",
    "runningDetailsLastTenTasksAverageExecutionTime": "Last 10 tasks average execution time (ms):",
    "setAngleOutputConfigurationAngle": "Target angle",
    "linearOutputConfigurationTreatAsSwitch": "Treat button as a switch",
    "servoOutputConfigurationCalibrate": "Calibrate",
    "servoOutputConfigurationCenterOffset": "Center offset (deg)",
    "servoOutputConfigurationAngleRange": "Servo range (deg)",
    "servoCalibrationIsInProgress": "Servo calibration is in progress",
    "servoCalibrationError": "An error occurred during servo calibration",
    "servoCalibrationCancel": "Cancel",
    "stepperOutputConfigurationDegree": "Angle (deg)",
    "outputSpeedControlTitle": "Speed",
    "outputPowerControlTitle": "Power",
    "outputInvertControlTitle": "Invert",
    "outputEndStateControlTitle": "End state",
    "accelerationTimeMs": "Acceleration time",
    "decelerationTimeMs": "Deceleration time",
    "profileTimingPostfix": "ms",
    "useAccelerationProfile": "Use acceleration profile",
    "useDecelerationProfile": "Use deceleration profile",
    "portConfigNotFound": "Port configuration is not found",
    "portConfigTitle": "Port configuration",
    "portConfigSubtitle": "Hub ''{hubName}'', port {portId}",
    "portConfigSaveButtonTitle": "Save",
    "portConfigCancelButtonTitle": "Cancel",
    "newSchemeDialogNameRequired": "Scheme name is required",
    "newSchemeDialogNameUniqueness": "Scheme with this name already exists",
    "inputGain": "Input gain",
    "inputGainLinear": "None",
    "inputGainLogarithmic": "Logarithmic",
    "inputGainExponential": "Exponential",
    "fullControllerInputName": "{controllerName} / {inputName}",
    "fullControllerInputNameWithPort": "{controllerName} / Port {portId} / {inputName}"
  },
  "motorServoEndState": {
    "float": "Float",
    "hold": "Hold",
    "brake": "Brake"
  },
  "about": {
    "title": "About",
    "disclaimerTitle": "Disclaimer",
    "legalNotice": "LEGOÂ® is a trademark of the LEGO Group of companies which does not sponsor, authorize or endorse this app.",
    "licenseTitle": "License",
    "licenseText": "MIT License",
    "authorTitle": "Author",
    "authorName": "Nikolai Sukhanov",
    "sourcesTitle": "Sources",
    "githubTitle": "ngPoweredUP GitHub",
    "githubApiTitle": "rxPoweredUP GitHub",
    "versionTitle": "Version"
  },
  "io": {
    "hardwareRevision": "Hardware Revision",
    "softwareRevision": "Software Revision",
    "ioInputCapabilities": "Input Capabilities",
    "ioOutputCapabilities": "Output Capabilities",
    "ioCapabilitiesEmpty": "None",
    "ioTypeMotor": "Motor",
    "ioTypeSystemTrainMotor": "System Train Motor",
    "ioTypeButton": "Button",
    "ioTypeLedLight": "LED Light",
    "ioTypeVoltage": "Voltage",
    "ioTypeCurrent": "Current",
    "ioTypePiezoTone": "Piezo Tone",
    "ioTypeRgbLight": "RGB Light",
    "ioTypeExternalTiltSensor": "External Tilt Sensor",
    "ioTypeMotionSensor": "Motion Sensor",
    "ioTypeVisionSensor": "Vision Sensor",
    "ioTypeExternalMotorWithTacho": "External Motor with Tacho",
    "ioTypeInternalMotorWithTacho": "Internal Motor with Tacho",
    "ioTypeInternalTilt": "Internal Tilt",
    "ioTypeLargeTechnicMotor": "Large Technic Motor",
    "ioTypeXLargeTechnicMotor": "XLarge Technic Motor",
    "ioTypeMediumTechnicAngularMotor": "Medium Technic Angular Motor",
    "ioTypeLargeTechnicAngularMotor": "Large Technic Angular Motor",
    "ioTypeHandsetButtonGroup": "Handset Button Group",
    "ioTypeAccelerometerSensor": "Accelerometer Sensor",
    "ioTypeGyroscopeSensor": "Gyroscope Sensor",
    "ioTypeTiltSensor": "Tilt Sensor",
    "ioTypeTemperatureSensor": "Temperature Sensor",
    "ioTypeGestureSensor": "Gesture Sensor",
    "ioIsNotConnectedInlineNotification": "disconnected",
    "ioTypeMismatchNotification": "IO type mismatch, expected ''{expectedType} HW/{expectedHardwareRevision} SW/{expectedSoftwareRevision}''",
    "unknownIoType": "Unknown device type",
    "operationModeLinear": "Linear",
    "operationModeServo": "Servo",
    "operationModeSetAngle": "Set angle",
    "operationModeStepper": "Stepper",
    "ioSynchronizableTitle": "Synchronizable"
  },
  "controller": {
    "detectControllerTip": "To connect a controller, press any button on it or move any stick",
    "unknownController": "Unknown controller",
    "noControllerConnected": "No controller detected",
    "isNotConnectedInlineNotification": "disconnected",
    "keyboardControllerType": "Keyboard",
    "gamepadControllerType": "Gamepad",
    "controllerDiscoveredNotification": "Discovered new controller: { name }",
    "controllerConnectedNotification": "{ name } controller connected",
    "controllerDisconnectedNotification": "{ name } controller disconnected",
    "activeZone": "Active zone",
    "rawInput": "input",
    "output": "output",
    "invert": "Invert",
    "save": "Save"
  },
  "controllerProfiles": {
    "buttonState": "{ value, select, 1 {Pressed} other {Released} }",
    "axisState": "Position: { value }",
    "settings": "Settings",
    "genericGamepad": {
      "name": "Generic gamepad",
      "axis": "Axis {inputId}",
      "button": "Button {inputId}"
    },
    "dualshock": {
      "name": "Dualshock",
      "leftStickXAxis": "Left stick X-axis",
      "leftStickYAxis": "Left stick Y-axis",
      "rightStickXAxis": "Right stick X-axis",
      "rightStickYAxis": "Right stick Y-axis",
      "r2Trigger": "R2 trigger",
      "l2Trigger": "L2 trigger",
      "buttonCross": "Cross button",
      "buttonSquare": "Square button",
      "buttonTriangle": "Triangle button",
      "buttonCircle": "Circle button",
      "l1Trigger": "L1 trigger",
      "r1Trigger": "R1 trigger",
      "buttonShare": "Share",
      "buttonOptions": "Options",
      "leftStickPress": "L3 left stick press",
      "rightStickPress": "R3 right stick press",
      "buttonDpadUp": "DPad up",
      "buttonDpadDown": "DPad down",
      "buttonDpadLeft": "DPad left",
      "buttonDpadRight": "DPad right",
      "buttonPs": "PS",
      "buttonTouchpadPress": "Touchpad press"
    },
    "xbox360": {
      "name": "Xbox 360",
      "leftStickXAxis": "Left stick X-axis",
      "leftStickYAxis": "Left stick Y-axis",
      "rightStickXAxis": "Right stick X-axis",
      "rightStickYAxis": "Right stick Y-axis",
      "lTrigger": "LT",
      "rTrigger": "RT",
      "buttonA": "A button",
      "buttonB": "B button",
      "buttonX": "X button",
      "buttonY": "Y button",
      "lBumper": "LB",
      "rBumper": "RR",
      "buttonShare": "Share",
      "buttonMenu": "Menu",
      "leftStickPress": "Left stick press",
      "rightStickPress": "Right stick press",
      "buttonDpadUp": "DPad up",
      "buttonDpadDown": "DPad down",
      "buttonDpadLeft": "DPad left",
      "buttonDpadRight": "DPad right"
    },
    "keyboard": {
      "name": "Keyboard",
      "button": "Key ''{ inputId }''",
      "captureNonAlphaNumerics": "Allow use of non-alphanumeric keys for input",
      "captureNonAlphaNumericsHint": "In some scenarios, capturing non-alphanumeric keys may prevent you from using your keyboard normally. Use this option with caution."
    },
    "hub": {
      "greenButton": "Green button",
      "plusButton": "''+'' button",
      "redButton": "Red button",
      "minusButton": "''-'' button",
      "genericButton": "Button {inputId}",
      "unknownButton": "Unknown button"
    }
  }
}
